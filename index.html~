<!DOCTYPE html>
<html>
  <head>
    <meta charset='utf-8'>
    <meta http-equiv="X-UA-Compatible" content="chrome=1">
    <link href='https://fonts.googleapis.com/css?family=Chivo:900' rel='stylesheet' type='text/css'>
    <link rel="stylesheet" type="text/css" href="stylesheets/stylesheet.css" media="screen" />
    <link rel="stylesheet" type="text/css" href="stylesheets/pygment_trac.css" media="screen" />
    <link rel="stylesheet" type="text/css" href="stylesheets/print.css" media="print" />
    <!--[if lt IE 9]>
    <script src="//html5shiv.googlecode.com/svn/trunk/html5.js"></script>
    <![endif]-->
    <title>Villa Badoer by Luca Menichetti</title>
  </head>

  <body>
    <div id="container">
      <div class="inner">

        <header>
          <h1>Villa Badoer</h1>
          <h2>Palladian villa also known as &quot;la Badoera&quot;</h2>
        </header>

        <section id="downloads" class="clearfix">
          <a href="https://github.com/H4ml3t/Villa-Palladiana/zipball/master" id="download-zip" class="button"><span>Download .zip</span></a>
          <a href="http://cvdlab-cg.github.com/418042/plasm.js/" id="download-tar-gz" class="button"><span>View on Plasm</span></a>
          <a href="https://github.com/H4ml3t/Villa-Palladiana" id="view-on-github" class="button"><span>View on GitHub</span></a>
        </section>

        <hr>

        <section id="main_content">

<p><strong>Villa Badoer</strong> is a villa located in the Fratta Polesine in the Veneto region. 
Called "la Badoera", was designed for the noble Francesco Badoer by the architect <strong>Andrea Palladio</strong> in 1554 and built between the years 1556-1563. 
This villa had the function of supporting field's administration and showing the economic prestige of Francesco Badoer.
The villa, since 1996, has been part of the "UNESCO World Heritage Site".</p>

<pre><div style="text-align: center"><img src="images/img01.jpg" width="220" height="164" />      <img src="images/img02.jpg" width="220" height="164" /></div></pre>

<p>The project in plasm focuses on representing the main building with particular attenction for the details of his structure components (rather than his forniture).
Every little parts, from the steps to the capitals, are designed with the aim to be as soon as possible similar to the original one.</p>

<pre><div style="text-align: center"><img src="images/oblique.png" width="220" height="140"  />      <img src="images/frontal.png" width="220" height="140" /></div></pre>

<h3>Components</h3>

<p>Hierarchical decomposition:
<ul>1. Base
<li>foundations</li>
<li>steps</li>
<li>rails</li>
</br>
2. Building
<li>walls</li>
<li>ledge</li>
<li>columns</li>
</br>
3. Top
<li>tympanum</li>
<li>guttae</li>
<li>roof</li>
</br>
4. Components
</ul>
Every hierarchical part is generated by a specific function.</p>

<h3>Plants & Documentation</h3>

<p>Though it's possible to find some plants on the web that isn't helpfull because of their incongruence between them. No proportion scale can be found and building's draw are never the same (see image below).
As consequence the proportion factor is chosen with large approssimation belonging it from the pictures. Morover these images are most of all photos taken from big distances, making impossible to reconstract a precise model.</p>

<pre><div style="text-align: center"><img src="images/img03.jpg" width="220" height="164" />      <img src="images/img04.jpg" width="220" height="164" /></div></pre>

<h3>Base</h3>

<p> In the base part we can find the foundation, generated by the plasm function <code>SIMPLEX_GRID</code>,
the steps and the rails. For the steps a profile of a single step is created using a <code>BEZIER</code> curve, then this 
profile is projected for all the lenght of the step with the function <code>CYLINDRICAL_SURFACE</code>.
To draw a single rail more than a suppurt function is used, in particular a rail is decomposed in the base, the top and mullions. Each of these
components are implemented with subfunction. The first two are functions that generate a single component 
with a defined lenght in orizontal or oblique position without a rotation. 
This makes codes much more "light" even with a more defined domain. For the mullion there is
a function that generats a single mullion with a specific height using <code>ROTATIONAL_SURFACE</code>.   
</p>

<pre><div style="text-align: center"><img src="images/base.png" width="70%" height="70%" alt="" />
<code>base view</code>

<img src="images/lateral_steps.png" width="70%" height="70%" alt="" />
<code>lateral steps</code>

<img src="images/steps.png" width="192" height="144" alt="" />     <img src="images/steps_real.png" width="35%" height="35%" alt="" />
<code>steps</code>

<img src="images/mullion.png" width="175" height="182" alt="" />     <img src="images/mullion_real.jpg" width="217" height="161" alt="" />
<code>mullions</code>

<img src="images/pillar.png" width="80%" height="70%" alt="" />
<code>pillar, mullion and rails</code>

<img src="images/pillar_real.png" width="80%" height="80%" alt="" />
</div></pre>

<h3>Building</h3>

<p>
The central part is composed by walls, columns and the ledge all around the building. For a single wall is used 
the function <code>TRIANGOLAR_DOMAIN</code> two times. For the ledge it's used a <code>NUBS</code> curve to create the profile
and a <code>BEZIER</code> function to generate the entire ledge.
</br>A single column is drawn using NUBS and ROTATIONAL_SURFACE and replicated.
The capital is composed in two part each with two spiral. This spiral is obtained using the function <code>RULED_SURFACE</code>
 that shaps a NUBS profile with spiral's points. To join the two spiral obtained is used a BEZIER surface that tighs in the middle.
 To join the two parts is used a BEZIER.</p>


<pre>
<div style="text-align: center">
<img src="images/building.png" width="50%" height="50%" alt="" />
<code>walls + ledge</code>

<img src="images/ledge.png" width="50%" height="50%" alt="" />
<code>ledge profile</code>

<img src="images/colums.png" width="70%" height="70%" alt="" />
<code>columns</code>

<img src="images/capreal.png" width="410" height="258" alt="" />

<img src="images/basereal.png" width="312" height="219" alt="" />
<code>capital and base</code>

<img src="images/step1.png" width="295" height="197" alt="" />
<code>step 1</code>

<img src="images/step2.png" width="295" height="197" alt="" />
<code>step 2</code>

<img src="images/step3.png" width="295" height="197" alt="" />
<code>step 3</code>

<img src="images/step4.png" width="295" height="197" alt="" />
<code>step 4</code>

<img src="images/captop.png" width="386" height="290" alt="" />

<img src="images/capbase.png" width="346" height="256" alt="" />
<code>result</code>

<img src="images/capitelli.png" width="90%" height="90%" alt="" />
<code>capitals</code>
</div>
</pre>

<h3>Top</h3>

<p>
The top of the villa is composed by the tympanum, the roof, and the guttae ("drops"). The tympanum is modelled with 2 different profiles for the base and for the oblique sides of the triangle. This profile is
created using NUBS and joined using BEZIER. </br>
The roof is realized with simple TRIANGOLAR_DOMAIN such as the center of the tympanum. One gutta is created and replicated all the way around the ledge and the tympanum. It is realized with 2 SIMPLEX_GRID in order to
fit with the profile of the ledge.
</p>    
        
<pre>
<div style="text-align: center">
<img src="images/timpano.png" width="80%" height="80%" alt="" />
<code>tympanum</code>

<img src="images/drops.png" width="598" height="290" alt="" />
<code>guttae</code>

<img src="images/particular2.png" width="100%" height="100%" alt="" />

<img src="images/particular.png" width="45%" height="50%" alt="" />      <img src="images/real_particular.png" width="40%" height="50%" alt="" />
<code>particulars</code>

<img src="images/roof.png" width="460" height="435" alt="" />
<code>roof</code>

<img src="images/top.png" width="80%" height="80%" alt="" />
<code>result</code>
</div>
</pre>       
        
        
<h3>Components</h3>

<p>
All other components like windows, door, chimneys are drawn in a single function. The windows and the doors are realized with SIMPLEX_GRID and POLYLINE for the grids. Below there is the final result.
</p>    
        
<pre>
<div style="text-align: center">
<img src="images/maiddoorreal.png" width="561" height="277" alt="" />

<img src="images/maindoor.png" width="258" height="421" alt="" />
<code>main door</code>

<img src="images/lodge.png" width="80%" height="80%" alt="" />
<code>lodge</code>

<img src="images/doorBelow.png" width="382" height="449" alt="" />
<code>door</code>

<img src="images/doorreal.png" width="392" height="440" alt="" />
<code>real door</code>

<img src="images/littlewind.png" width="352" height="275" alt="" />
<code>little window</code>

<img src="images/twowind.png" width="50%" height="50%" alt="" />     <img src="images/twowindreal.png" width="60%" height="60%" alt="" />
<code>two windows</code>

<img src="images/chimney.png" width="50%" height="100%" alt="" />     <img src="images/chimneyreal.png" width="25%" height="80%" alt="" />
<code>chimneys</code>

<img src="images/particulartop.png" width="50%" height="100%" alt="" />     <img src="images/particulartop2.jpg" width="50%" height="100%" alt="" />
<code>particular</code>
</div>
</pre>    
      
      
      <h3>Final result</h3>  
<pre>
<div style="text-align: center">
<a href="images/frontal.png"><img src="images/frontal.png" width="100%" height="100%" alt="" /></a>
<code>frontal view (click to view)</code>

<img src="images/frontalreal.jpg" width="100%" height="100%" alt="" />

<a href="images/oblique.png"><img src="images/oblique.png" width="100%" height="100%" alt="" /></a>
<code>lateral view (click to view)</code>

<img src="images/oblique_real.jpg" width="100%" height="100%" alt="" />

<img src="images/dietro.PNG" width="100%" height="100%" alt="" />

<a href="images/dietromodel.png"><img src="images/dietromodel.png" width="100%" height="100%" alt="" /></a>
<code>behind</code>

<img src="images/samemodelreal.jpg" width="100%" height="100%" alt="" />

<a href="images/samemodel.png"><img src="images/samemodel.png" width="100%" height="100%" alt="" /></a>
<code>lateral view left</code>

<a href="images/final1.png"><img src="images/final1.png" width="100%" height="100%" alt="" /></a>

<a href="images/final2.png"><img src="images/final2.png" width="100%" height="100%" alt="" /></a>

<a href="images/final3.png"><img src="images/final3.png" width="100%" height="100%" alt="" /></a>

<a href="images/final4.png"><img src="images/final4.png" width="100%" height="100%" alt="" /></a>

<a href="images/final5.png"><img src="images/final5.png" width="100%" height="100%" alt="" /></a>

<a href="images/final6.png"><img src="images/final6.png" width="100%" height="100%" alt="" /></a>

<a href="images/final7.png"><img src="images/final7.png" width="100%" height="100%" alt="" /></a>

<a href="images/final8.png"><img src="images/final8.png" width="100%" height="100%" alt="" /></a>

<a href="images/final9.png"><img src="images/final9.png" width="100%" height="100%" alt="" /></a>

</div>
</pre>      
     
        
        </section>

        <footer>
          Villa Badoer is maintained by <a href="https://github.com/H4ml3t">H4ml3t</a><br>
          This page was generated by <a href="http://pages.github.com">GitHub Pages</a>. Tactile theme by <a href="http://twitter.com/jasonlong">Jason Long</a>.
        </footer>

        
      </div>
    </div>
  </body>
</html>